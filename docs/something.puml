@startuml


Model --> DatabaseConnection

Account <-- Model
Password <- Account
controller.SignInWindowController <--- Model
controller.SignUpWindowController --> controller.SignInWindowController
controller.MainMenuWindowController <-- controller.SignInWindowController
controller.MainMenuWindowController <-- controller.SongPlayer
controller.MainMenuWindowController --> controller.Album
controller.Album --> controller.Song
controller.Song <- controller.ParseSongFile



class Password {
- String password
- String salt

+ String getHashedPassword()
}

class Account {
- String username
- Password password

+ void setNewLogin()
+ void setNewPassword()
+ String getNewLogin()
}

class DatabaseConnection {
- String driver_name
- String db_name
- String user_name
- String pass
- String host_name
- bool connectionStatus

- bool getDatabaseParameters()
+ bool getConnectionStatus()
}

class Model {
- DatabaseConnection connection

+ Account getUserInfoFromDatabase(String username, String password)
+ bool registerUser(String username, String password)
+ Vector<Account> getAllDatabaseAccounts()
}

class controller.SignInWindowController {
- Model model
- Label signInMenuLabel
- String usernameTextField
- String passwordTextField
- Button signInButton
- Button signUpButton

+ void signInButton()
+ void canselButton()
+ void signUpButton()
}

class controller.SignUpWindowController {
- Label signUpMenuLabel
- String usernameTextField
- String passwordTextField
- String confirmPasswordTextField

- Button signUpButton
- Button canselButton

+ void signUpButton()
+ void cancelButtonBackToMenu()
}

class controller.MainMenuWindowController {
- Button liked_tracks
- Button saved_tracks
- Button all_albums
- SongPlayer songPlayer

+ void showSongCover(songPlayer.getCurrentSong())
+ void goToLikedTracks()
+ void goToSavedTracks()
+ void goToAllAlbums()
}

class controller.Album {
- String album_title
- int amount_of_tracks
- vector<Song> album_songs

+ void addSongIntoAlbum()
+ String getAlbumTitle()
+ int getAmountOfTracks()
+ vector<Song> getAlbumSongs
}

class controller.ParseSongFile {
- URL url_to_the_song

+ Song getParsedFile()
}

class controller.Song {
- String song_title
- String singer
- Image song_cover
- File song_file

+ String getSongTitle()
+ String getSongSinger()
+ File getSongFile()
}

class controller.SongPlayer {
- Song currentSong
- Song nextSong
- Song prevSong
- bool isAnySongPlaying

+ bool getIsAnySongPlaying()
+ bool playCurrentSong()
+ Song getPrevSong()
+ Song getCurrentSong()
+ Song getNextSong()
}

@enduml